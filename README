This app is being built using Ruby/Ruby on Rails/SQL DB/ActiveRecord Model and Backend/jQuery/YUI/ExtJS
initially to provide a Fixed Income Management Solution with Web UI and Web Services API,
specially keeping in mind customers who use the MyInterest Income Calculator iPhone App in iTunes App Store.
The Web Services API could be integrated to iPhone App MyInterest also. Hosted on Heroku for Staging it.
Staging: http://myinterest-income.heroku.com
The staging data may or may not be pushed in consistent state right now.
Permission requited if you intend to use it directly, specially add and edit stuff using it.

www.drinnovations.us was also designed by me using Rails/jQuery/YUI and has a more Web Services API Viewpoint.
Comparing for UI: Server side Ruby processing and Web Services JSON Approaches.
Uses Active Record Queries in different styles.
May migrate to MongoDB also.


Overall, Under Design Investigation/Development.

Set up database.yml
rake db:migrate
script/server

-------------------
Completed Functionality

Model/Mainly Backend:

>>Customer and Investments Model with Nested Attributes Updates
>>Basic UI and Model support: Add new, Edit, View, Delete Customers
>>Basic UI and Model support: Add new, Edit, View Delete Multiple Investments by a Customer
>>Bank Model Introduced and it belongs to Investments.
>>Basic UI and Model support: Add new, Edit, View Delete Multiple Investments with Banks by a Customer
>>Banks Drop Down with Create for New Automatically. When you click Add New Bank, it allows you to enter new bank name.Uses jQuery.
>>Allows Selected bank to changed/added in Edit Mode, can be changed. Deleting Investment Keeps Banks, since other customers can use it. Builds dynamically.
>>Investment model manages Bank creation. Keeps Customer controller clean. Keeps Uniqueness of Bank by first trying to create it with uniqueness validation, then find to avoid race conditions.
>>Validation checks and display for Parent and Child Nested Attributes.
>>Passing Investment 'bank' virtual attribute for validation error to parent Customer with false returned.
>> Added Authlogic for to login to see Customers Investments and also Edit/Change their Investments.
Authentication added for Security for the User of this system, who can be a Financial Advisor having Admin Rights.
>>Adding declarative_authorization here for Authorization.
   4 Roles defined Initially:
     -- Financial Advisor: can do everything
     -- CoAdvisor: can do everything except delete/destroy to investments
     -- Assistant:can only see customer and also their investments. No edit, create, delete.
     -- Guest: doesn't login. Can only see customer names


------------------------

Remaining Functionality
1. Add more stuff for declarative authorization
2. Add More RSpec and Shoulda tests to be checked in.
3. In line Validations? Also, formtastic looks fantastic.
4. UI Layout: Very basic currently has to be improved with layout as in www.drinnovations.us
--------------------------
